{"version":3,"sources":["assets/tphco.png","serviceWorker.js","store/actionTypes/actionTypes.js","constants/constants.js","components/admin/main/dashboard/Dashboard.js","components/admin/main/energyTechWeekly/EnergyTechWeekly.js","components/admin/footer/Footer.js","components/admin/header/Header.js","components/authentication/login/Login.js","components/admin/main/Main.js","constants/time.js","components/admin/main/energyTechWeekly/newIssue/NewIssue.js","components/admin/main/stocks/Stocks.js","components/admin/main/tPHEvents/event/Event.js","components/admin/main/tPHEvents/TPHEvents.js","components/admin/Admin.js","components/authentication/register/Register.js","components/authentication/resetPassword/ResetPassword.js","components/authentication/Authentication.js","components/App.js","components/user/User.js","store/initialState.js","store/reducers.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","actionType","domain","URL","LOGIN_URL","REGISTER_URL","FORGOT_PASSWORD_URL","RESET_PASSWORD_URL","NEWS_ARTICLES_URL","ALT_STORY_URL","ENERGY_TECH_WEEKLY_URL","ENERGY_TECH_WEEKLY__TITLES_URL","ADMIN_ENERGY_TECH_WEEKLY_URL","ADMIN_ADD_ISSUE_URL","ADD_STOCK_URL","REMOVE_STOCK_URL","TICKERS_URL","STORE_TICKERS_URL","ADMIN_STOCKS_URL","ADMIN_ADD_STOCK_URL","ADMIN_REMOVE_STOCK_URL","TIMESTAMP_URL","ADMIN_TIMESTAMPS_URL","EVENTS_URL","ADMIN_TPH_EVENTS_URL","Dashboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","post","then","response","setTimestamps","data","timestamps","catch","e","console","log","timestampsMap","stop","_callee2","timestampArray","_context2","map","timestamp","i","push","react_default","createElement","key","username","length","setState","objectSpread","state","Component","connect","dispatch","value","type","EnergyTechWeekly","getIssues","issueList","issue","year","week","slice","month","day","issueItem","className","title","setIssueList","react_router_dom","to","Footer","Header","Login","handleInput","defineProperty","target","name","handleLogin","_ref","preventDefault","attempt","usernameOrEmail","password","_ref2","user","isAuthenticated","login","localStorage","setItem","JSON","stringify","parse","getItem","history","document","getElementById","insertAdjacentHTML","concat","_x2","apply","arguments","_x","_this2","src","tphco","alt","id","onSubmit","onChange","placeholder","autoComplete","onClick","Main","children","todaySplit","Date","toLocaleDateString","split","TODAY","DAY","MONTH","YEAR","NewIssue","trim","imageParagraphLoop","first","last","imageParagraph","duo","listItemLoop","list","item","addIssue","message","setStateFillers","imageQuan","paragraphQuan","listitemsQuan","image","paragraph","listitem","yearMonthDay","required","autoFocus","min","max","width","Stocks","addStock","ticker","segment","success","getStocks","removeStock","stockArray","stock","stockItem","setStocks","Event","description","time","date","TPHEvents","getEvents","events","setEvents","mapEvents","eventsArray","event","Event_Event","Admin","Header_Header","Main_Main","react_router","exact","path","component","Footer_Footer","Register","ResetPassword","Authentication","App","Admin_Admin","initialState","reducer","undefined","action","admin","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a6c181d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tphco.cca9d680.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const actionType = {\n    ADMIN: 'ADMIN',\n    LOGIN: 'LOGIN',\n    TIMESTAMPS: 'TIMESTAMPS',\n    SET_STOCKS: 'SET_STOCKS',\n    SET_ISSUE_LIST: 'SET_ISSUE_LIST',\n    SET_EVENTS: 'SET_EVENTS'\n}","const domain = 'http://localhost:5000'\n\nexport const URL = {\n    // authentication\n    LOGIN_URL: domain + '/login',\n    REGISTER_URL: domain + '/register',\n    FORGOT_PASSWORD_URL: domain + '/forgotPassword',\n    RESET_PASSWORD_URL: domain + '/resetPassword/:token',\n\n    // API\n    NEWS_ARTICLES_URL: domain + '/api/newsArticles',\n\n    //energy tech weekly\n    ALT_STORY_URL: domain + '/altstory',\n    ENERGY_TECH_WEEKLY_URL: domain + '/energyTechWeekly',\n    ENERGY_TECH_WEEKLY__TITLES_URL: domain + '/energyTechWeeklyTitles',\n    ADMIN_ENERGY_TECH_WEEKLY_URL: domain + '/admin/energyTechWeekly',\n    ADMIN_ADD_ISSUE_URL: domain + '/admin/addIssue',\n\n    // stocks\n    ADD_STOCK_URL: domain + '/addStock',\n    REMOVE_STOCK_URL: domain + '/removeStock',\n    TICKERS_URL: domain + '/tickers',\n    STORE_TICKERS_URL: domain + '/storeTickers',\n    ADMIN_STOCKS_URL: domain + '/admin/stocks',\n    ADMIN_ADD_STOCK_URL: domain + '/admin/addStock',\n    ADMIN_REMOVE_STOCK_URL: domain + '/admin/removeStock',\n\n    // timestamps\n    TIMESTAMP_URL: domain + '/timestamp',\n    ADMIN_TIMESTAMPS_URL: domain + '/admin/timestamps',\n\n    // events\n    EVENTS_URL: domain + '/events',\n    ADMIN_TPH_EVENTS_URL: domain + '/admin/tPHEvents'\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux';\nimport { actionType } from '../../../../store/actionTypes/actionTypes';\nimport { URL } from '../../../../constants/constants';\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            timestampArray: ''\n        }\n    }\n\n    componentDidMount = async () => {\n        await axios.post(URL.ADMIN_TIMESTAMPS_URL).then(response => {\n            this.props.setTimestamps(response.data.timestamps)\n        }).catch(e => console.log(e))\n\n        this.timestampsMap()\n    }\n\n    timestampsMap = async () => {\n        let timestampArray = []\n\n        await this.props.timestamps.map((timestamp,i) => {\n            return timestampArray.push(\n                <div key={i}>\n                    <p>{timestamp.username} - total timestamps: {timestamp.timestamp.length}</p>\n                    <p>{timestamp.timestamp}</p>\n                </div>\n            )\n        })\n\n        this.setState({\n            ...this.state,\n            timestampArray: timestampArray\n        })\n    }\n    \n  render() {\n    return (\n      <div>\n        <p>Dashboard page</p>\n        {this.state.timestampArray}\n        <p>Dashboard page</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setTimestamps: (value) => dispatch({type: actionType.TIMESTAMPS, value})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport { actionType } from '../../../../store/actionTypes/actionTypes';\nimport { connect } from 'react-redux';\nimport { URL } from '../../../../constants/constants'\n\nclass EnergyTechWeekly extends Component {\n\n  getIssues = async () => {\n    let issueList = []\n\n    await axios.post(URL.ADMIN_ENERGY_TECH_WEEKLY_URL).then(response => {\n      let issue = response.data.response\n\n      issue.map((issue, i) => {\n        let year = issue.week.slice(0,4)\n        let month = issue.week.slice(4,6)\n        let day = issue.week.slice(6,9)\n\n        let issueItem = \n          <div key={i} className='issue-item'>\n            <p>{issue.title}</p>\n            <p>{month}/{day}/{year}</p>\n          </div>\n\n        \n        return issueList.push(issueItem)\n      })\n    })\n\n    this.props.setIssueList(issueList)\n  }\n\n  componentDidMount = () => {\n    this.getIssues()\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className='header'>Energy Tech Weekly page</h1>\n        <div className='issue-list'>\n        {this.props.issueList}\n        </div>\n        <div className='new-issue'>\n        <Link to={'/admin/energyTechWeekly/newIssue'}><button>New Issue</button></Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ...state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setIssueList: (value) => dispatch({type: actionType.SET_ISSUE_LIST, value})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnergyTechWeekly)","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div>\n        <p>footer page</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className='header'>\n        <Link to={'/admin/dashboard'}>\n          <div className='nav-button'><p className='nav-text'>Dashboard</p></div>\n        </Link>\n\n        <Link to={'/admin/stocks'}>\n          <div className='nav-button'><p className='nav-text'>Stocks</p></div>\n        </Link>\n\n        <Link to={'/admin/energyTechWeekly'}>\n          <div className='nav-button'><p className='nav-text'>ETech Weekly</p></div>\n        </Link>\n\n        <Link to={'/admin/tPHEvents'}>\n          <div className='nav-button'><p className='nav-text'>TPH Events</p></div>\n        </Link>\n      </header>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport tphco from '../../../assets/tphco.png'\nimport axios from 'axios'\nimport { actionType } from '../../../store/actionTypes/actionTypes';\nimport { URL } from '../../../constants/constants'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ...this.state,\n      attempt: 0\n    }\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleLogin = async (e) => {\n    console.log('inside the login')\n    e.preventDefault()\n\n    this.setState({\n      ...this.state,\n      attempt: this.state.attempt + 1\n    })\n    await axios.post(URL.LOGIN_URL, {\n      usernameOrEmail: this.state.usernameOrEmail,\n      password: this.state.password\n    }).then(async response => {\n      if (response.data.isAuthenticated) {\n        await this.props.login(response.data.user)\n        await localStorage.setItem('user', JSON.stringify(response.data.user))\n\n        let user = JSON.parse(localStorage.getItem('user'))\n\n        console.log(user)\n        if (user.username === 'mmadrid' || user.username === 'rking') {\n          this.props.history.push('admin')  \n        } else {\n          this.props.history.push('user')\n        }\n\n      } else {\n        document.getElementById('form').insertAdjacentHTML('beforebegin', `<div><p className=''>The username/email and the password entered are not recognized. Please try again.</p>\n        <p>Attempt #${this.state.attempt}</p><div>`)\n      }\n    })\n  }\n\n  render() {\n\n    console.log(this.props)\n\n    return (\n      <div>\n        <header className=\"App-header\">\n          <img src={tphco} className=\"logo\" alt=\"logo\" />\n\n          <section id=\"form\" className='input-container'>\n          <form onSubmit={() => this.handleLogin}>\n            <div className='input-div'>\n              <label className='label'>Username or Email</label>\n              <input id='usernameOrEmail' className='input' type='text' onChange={this.handleInput} name='usernameOrEmail' placeholder='Username or Email' autoComplete=\"username || email\" />\n            </div>\n\n            <div className='input-div'>\n              <label className='label'>Password</label>\n              <input id='password' className='input' type='password' onChange={this.handleInput} name='password' placeholder='Password' autoComplete=\"current-password\" />\n            </div>\n\n            <input className='button' type='submit' value='Login' onClick={this.handleLogin} />\n            </form>\n          </section>\n        </header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ...state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (value) => dispatch({type: actionType.LOGIN, value})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react'\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <main>\n        {this.props.children}\n      </main>\n    )\n  }\n}\n","let today = new Date()\nlet todaySplit = today.toLocaleDateString().split('/')\nlet year = todaySplit[2]\n\nconst day = () => {\n    if (todaySplit[1] < 10) {\n        return '0' + todaySplit[1]\n    } else {\n        return todaySplit[1]\n    }\n}\n\nconst month = () => {\n    if (todaySplit[0] < 10) {\n        return '0' + todaySplit[0]\n    } else {\n        return todaySplit[0]\n    }\n}\n\nexport const TODAY = {\n    DAY: day(),\n    MONTH: month(),\n    YEAR: year\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { TODAY } from '../../../../../constants/time'\n\nexport default class NewIssue extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    handleInput = (e) => {\n        let targetArray = []\n        if (e.target.value.trim() === '') {\n            delete this.state.issue[e.target.name]\n            console.log(this.state)\n        } else {\n            this.setState({\n                ...this.state,\n                issue: {\n                    ...this.state.issue,\n                    [e.target.name]: e.target.value\n                }\n            })\n        }        \n    }\n\n    imageParagraphLoop = (first, last) => {\n        let imageParagraph = []\n\n        for (let i = first; i <= last; i++) {\n            let duo = \n                <div key={i} className='issue-image-paragraph'>\n                    <div className='issue-image'>\n                        <label className='energy-tech-label'>Image {i}:</label>\n                        <input className='issue-input image-input' type='url' name={`image${i}`} placeholder={`Image ${i} url`} onChange={(e) => this.handleInput(e)} />\n                    </div>\n\n                    <div className='issue-paragraph'>\n                        <label className='energy-tech-label paragraph-label'>Paragraph {i}:</label>\n                        <textarea className='issue-input paragraph-input'  type='text' name={`paragraph${i}`} onChange={(e) => this.handleInput(e)} />\n                    </div>\n                </div>\n\n            imageParagraph.push(duo)\n        }\n        return imageParagraph\n    }\n\n    listItemLoop = () => {\n        let list = []\n\n        for (let i = 1; i <= 20; i++) {\n            let item = \n                <div key={i} className='issue-listitem'>\n                    <label className='energy-tech-label'>List Item {i}:</label>\n                    <textarea className='listitem-input' type='text' name={`listitem${i}`} onChange={(e) => this.handleInput(e)} />\n                </div>\n\n            list.push(item)\n        }\n\n        return list\n    }\n\n    addIssue = () => {\n        axios.post('http://localhost:5000/admin/addIssue', {\n            issue: this.state.issue\n        }).then(response => {\n            this.setState({\n                message: response.data.message\n            })\n        }).catch(e => {\n            console.log(e)\n            this.setState({\n                ...this.state,\n                message: `There seems to be an error`\n            })\n        })\n    }\n\n    setStateFillers = (imageQuan, paragraphQuan, listitemsQuan) => {\n        for (let i = 1; i <= imageQuan; i++) {\n            let image = `image${i}`\n\n            this.setState({\n                ...this.state,\n                [image]: '',\n            })\n        }\n\n        for (let i = 1; i <= paragraphQuan; i++) {\n            let paragraph = `paragraph${i}`\n\n            this.setState({\n                ...this.state,\n                [paragraph]: '',\n            })\n        }\n\n        for (let i = 1; i <= listitemsQuan; i++) {\n            let listitem = `listitem${i}`\n\n            this.setState({\n                ...this.state,\n                [listitem]: '',\n            })\n        }\n    }\n\n    yearMonthDay = () => {\n        let day = TODAY.DAY\n        let month = TODAY.MONTH\n        let year = TODAY.YEAR\n        \n        let yearMonthDay = `${year}${month}${day}`\n\n        this.setState({\n            ...this.state,\n            yearMonthDay\n        })\n    }\n\n    componentDidMount = async () => {\n        this.yearMonthDay()\n        // this.setStateFillers(10, 10, 20)\n    }\n\n  render() {\n    console.log(this.state)\n    return (\n      <div className='container'>\n        <h1>New Issue Page</h1>\n\n        <h2>Do Not Refresh Page. Refreshing page will erase any currently input date.</h2>\n\n        <p>The fields \"Title\", \"Week\", \"Author\", and \"Source\" are required</p>\n        \n        <div>\n            <p>Instructions:</p>\n\n            <p><b>Enter the week as YearMonthDay format.</b></p>\n\n            <p>- (Ex. {this.state.yearMonthDay})</p>\n\n            <p><b>Enter all information exactly how you want it to appear on the E-Tech issue. Capitalization and grammar matters.</b></p>\n\n            <p><b>Leaving a portion blank will skip the section with no penalty and continue filling in the next filled sections.</b></p>\n\n            <p>- (Ex. filling paragraph 1, paragraph 4, and paragraph 9 will look the same as filling out paragraph 1, paragraph 2, and paragraph 3. filling out paragraph 1, image 4, paragraph 4, and paragraph 10 will look the same as filling out paragraph 1, image 2, paragraph 2, and paragraph 3.)</p>\n\n            <p><b>The Video will show up right underneath the title.</b></p>\n\n            <p><b>Each image will appear above the next paragraph entered. for an image and/or video, right click the image/video and click \"Copy Image Address\" to get the proper URL to the image</b></p>\n\n            <p><b>If you choose to have a list of items does change this slightly, List items will show up inbetween paragraph 5 and image6/paragraph 6. Put each list item in. The portion you want to appear above the list use in the sections above listitem1. The portion you want below the List, enter starting at image6 and below.</b></p>\n\n            <p></p>\n        </div>\n\n        <div className='new-issue-form'>\n            <div className='issue-title'>\n                <label className='energy-tech-label'>Title:</label>\n\n                <input className='issue-input' type='text' name='title' placeholder='Issue Title' onChange={(e) => this.handleInput(e)} required autoFocus />\n            </div>\n\n            <div className='issue-week-author'>\n                <div className='issue-week'>\n                    <label className='energy-tech-label'>Week:</label>\n\n                    <input className='issue-input' type='text' name='week' onChange={(e) => this.handleInput(e)} placeholder={`ex. ${this.state.yearMonthDay}`} min={8} max={8} required />\n                </div>\n\n                <div className='issue-author'>\n                    <label className='energy-tech-label'>Author:</label>\n\n                    <input className='issue-input' width='contain' type='text' name='author' placeholder='Author' onChange={(e) => this.handleInput(e)} required />\n                </div>\n            </div>\n\n            {this.imageParagraphLoop(1,5)}\n\n            {this.listItemLoop()}\n\n            {this.imageParagraphLoop(6,10)}\n\n            <div className='issue-title'>\n                <label className='energy-tech-label'>Source:</label>\n\n                <input className='issue-input' type='text' name='source' placeholder='Issue Source' onChange={(e) => this.handleInput(e)} required />\n            </div>\n        </div>\n\n        <button onClick={() => this.addIssue()}>Add Issue</button>\n\n        <p>{this.state.message}</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { actionType } from '../../../../store/actionTypes/actionTypes';\nimport { URL } from '../../../../constants/constants'\n\nclass Stocks extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    handleInput = (e) => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    addStock = () => {\n        axios.post(URL.ADMIN_ADD_STOCK_URL, {\n            ticker: this.state.ticker,\n            name: this.state.name,\n            segment: this.state.segment\n        }).then(response => {\n            if (response.data.success) {\n                this.getStocks()\n            }\n\n            this.setState({\n                ...this.state,\n                message: response.data.message\n            })\n        }).catch(e => console.log(e))\n    }\n\n    removeStock = (e) => {\n        console.log(e.target)\n        axios.post(URL.ADMIN_REMOVE_STOCK_URL, {\n            ticker: e.target.value,\n            name: e.target.name\n        }).then(response => {\n            console.log(response)\n            if (response.data.success) {\n                this.getStocks()\n            }\n\n            this.setState({\n                ...this.state,\n                message: response.data.message\n            })\n        })\n    }\n\n    getStocks = async () => {\n        let stockArray = []\n        await axios.post(URL.ADMIN_STOCKS_URL).then(response => {\n            const stocks = response.data.response\n\n            stocks.map((stock, i) => {\n                let stockItem = \n                    <div key={i} className='stock-item-container'>\n                        <div className='stock-info'>\n                            <p>{stock.ticker}</p>\n                            <p>{stock.name}</p>\n                            <p>{stock.segment}</p>\n\n                            <div>   \n                                <button>Edit</button>\n                                <button name={stock.name} onClick={(e) => {this.removeStock(e)}} value={stock.ticker}>Remove</button>\n                            </div>\n                        </div>\n                    </div>\n\n                return stockArray.push(stockItem)\n            })\n        }).catch(e => console.log(e))\n\n        this.props.setStocks(stockArray)\n    }\n\n    componentDidMount = () => {\n        this.getStocks()\n    }\n\n  render() {\n    return (\n      <div className='stock-container'>\n        <div className='stocks-header'>\n            <h1>Stocks</h1>\n        </div>\n        \n        {this.props.stockArray}\n\n        <div className='new-stock'>\n            {this.state.message}\n            <h2>Add New Stock</h2>\n            <input id='ticker' name='ticker' type='text' onChange={(e) => this.handleInput(e)} required />\n            <input id='name' name='name' type='text' onChange={(e) => this.handleInput(e)} required />\n            <select type='select' name='segment' onChange={(e) => this.handleInput(e)} required >\n                <option value={null}></option>\n                <option title='UPSTREAM' value='UPSTREAM'>UPSTREAM</option>\n                <option title='MIDSTREAM' value='MIDSTREAM'>MIDSTREAM</option>\n                <option title='OFS' value='OFS'>OFS</option>\n                <option title='CHEMICALS' value='CHEMICALS'>CHEMICALS</option>\n                <option title='EXPLORATION & PRODUCTION' value='EXPLORATION & PRODUCTION'>EXPLORATION & PRODUCTION</option>\n            </select>\n\n            <button onClick={() => this.addStock()}>Add</button>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setStocks: (value) => dispatch({type: actionType.SET_STOCKS, value})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stocks)\n","import React, { Component } from 'react'\n\nexport default class Event extends Component {\n  render() {\n    return (\n      <div className='event-container'>\n        <p>{this.props.title}</p>\n        <p>{this.props.description}</p>\n        <p>{this.props.location}</p>\n        <p>{this.props.time}</p>\n        <p>{this.props.date}</p>\n\n        <button>Edit</button>\n        <button>Remove</button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { actionType } from '../../../../store/actionTypes/actionTypes';\nimport Event from './event/Event';\nimport { URL } from '../../../../constants/constants'\n\nclass TPHEvents extends Component {\n\n  getEvents = () => {\n    axios.post(URL.ADMIN_TPH_EVENTS_URL).then(response => {\n      let events = response.data.events\n      this.props.setEvents(events)\n      console.log(events)\n    }).catch(e => console.log(e))\n  }\n\n  mapEvents = () => {\n    let eventsArray = []\n\n      this.props.events.map((event, i) => {\n        console.log(event)\n        return eventsArray.push(\n          <Event \n            key={i}\n            title={event.title}\n            description={event.description}\n            date={event.date}\n            location={event.location}\n            time={event.time}\n          />\n        )\n      })\n      return eventsArray\n  }\n  \n\n  componentDidMount = () => {\n    this.getEvents()\n  }\n\n  render() {\n    if (this.props.events === 'none') {\n      return (\n        <div className='container'>\n          <p>tph events page</p>\n          <p>No events</p>\n          <button>Add New Event</button>\n        </div>\n      )\n    } else {\n      return (\n        <div className='container'>\n          <p>tph events page</p>\n          {this.mapEvents()}\n          <button>Add New Event</button>\n        </div>\n      )\n    }\n  }\n}\n  \n\n\nconst mapStateToProps = state => {\n  return {\n    ...state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setEvents: (value) => dispatch({type: actionType.SET_EVENTS, value})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TPHEvents)","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from './main/dashboard/Dashboard'\nimport EnergyTechWeekly from './main/energyTechWeekly/EnergyTechWeekly';\nimport Footer from './footer/Footer'\nimport Header from './header/Header'\nimport Login from '../authentication/login/Login'\nimport Main from './main/Main'\nimport NewIssue from './main/energyTechWeekly/newIssue/NewIssue'\nimport Stocks from './main/stocks/Stocks'\nimport TPHEvents from './main/tPHEvents/TPHEvents'\n\n\nexport default class Admin extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n\n        <Main>\n            <Switch>\n                <Route exact path={'/'} component={Stocks} />\n                <Route exact path={'/admin/dashboard'} component={Dashboard} />\n                <Route exact path={'/admin/stocks'} component={Stocks} />\n                {/* <Route exact path={'/admin/stocks/editStock'} component={EditStock} /> */}\n                <Route exact path={'/admin/energyTechWeekly'} component={EnergyTechWeekly} />\n                <Route exact path={'/admin/energyTechWeekly/newIssue'} component={NewIssue} />\n                {/* <Route exact path={'/admin/energyTechWeekly/editIssue'} component={EnergyTechWeekly} /> */}\n                <Route exact path={'/admin/tPHEvents'} component={TPHEvents} />\n                {/* <Route exact path={'/admin/tPHEvents/addEvent'} component={TPHEvents} />\n                <Route exact path={'/admin/tPHEvents/editEvent'} component={EnergyTechWeekly} /> */}\n            </Switch>\n        </Main>\n        \n        <Footer />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Register extends Component {\n  render() {\n    return (\n      <div>\n        <p> register page</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class ResetPassword extends Component {\n  render() {\n    return (\n      <div>\n        <p>reset the password</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\n\nimport Login from './login/Login'\nimport Register from './register/Register'\nimport ResetPassword from './resetPassword/ResetPassword'\n\nclass Authentication extends Component {\n\n    render() {\n\n        \n            return (\n            <div>\n                <Switch>\n                    <Route exact path={'/'} component={Login} />\n                    <Route exact path={'/register'} component={Register} />\n                    <Route path={'/resetPassword/:token'} component={ResetPassword} />\n                </Switch>\n            </div>\n            )\n        }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        ...state\n    }\n}\n\nexport default connect(mapStateToProps)(Authentication)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Admin from './admin/Admin'\nimport Authentication from './authentication/Authentication';\nimport User from './user/User'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ...this.state,\n      attempt: 1\n    }\n  }\n\n  render() {\n\n    // if (this.props.user.username === 'mmadrid') {\n      if (true) {\n      return (\n        <Admin />\n      );\n    } else if (false) {\n      return (\n        <User />\n      )\n    } else {\n      return (\n        <Authentication />\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ...state\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React, { Component } from 'react'\n\nexport default class User extends Component {\n  render() {\n    return (\n      <div>\n        <p>user page</p>\n      </div>\n    )\n  }\n}\n","export const initialState = {\n    user: {\n        username: null\n    },\n    events: 'none'\n}","import { initialState } from \"./initialState\";\nimport { actionType } from './actionTypes/actionTypes'\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        // case actionType.ACTION_HERE: {\n        //     return {\n        //         ...state,\n        //         someVariableHere: action.value\n        //     }\n        // }\n\n        case actionType.ADMIN: {\n            return {\n                ...state,\n                admin: action.value\n            }\n        }\n\n        case actionType.LOGIN: {\n            return {\n                ...state,\n                user: action.value\n            }\n        }\n\n        case actionType.TIMESTAMPS: {\n            return {\n                ...state,\n                timestamps: action.value\n            }\n        }\n\n        case actionType.SET_STOCKS: {\n            return {\n                ...state,\n                stockArray: action.value\n            }\n        }\n\n        case actionType.SET_ISSUE_LIST: {\n            return {\n                ...state,\n                issueList: action.value\n            }\n        }\n\n        case actionType.SET_EVENTS: {\n            return {\n                ...state,\n                events: action.value\n            }\n        }\n        \n\n\n        default: {\n            return state\n        }\n    }\n}\n\nexport default reducer","\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reducer from './store/reducers'\nimport { initialState } from './store/initialState'\nimport thunk from 'redux-thunk'\n\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\n\nimport './styles/index.css'; // css styling\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer,initialState,composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store = {store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}